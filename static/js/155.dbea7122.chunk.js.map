{"version":3,"file":"static/js/155.dbea7122.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Contacts/Contacts.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/Loader/Loader.jsx","components/ErrorMessage/ErrorMessage.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","ui/ContactsPage.styled.js","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border-radius: 5px;\n  background-color: inherit;\n  padding: 20px;\n  backdrop-filter: blur(15px);\n  border: 2px solid #5ea4ed;\n`;\n\nexport const Label = styled.label`\n  font-size: 30px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n  font-size: 30px;\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  background-color: #4caf50;\n  color: white;\n  padding: 14px 20px;\n  margin: 8px 0;\n  font-size: 25px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilterValue = state => state.filter;\n","import { nanoid } from 'nanoid';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispath = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const normalizedName = name.toLowerCase();\n    const isAlreadyInContacts = contacts.find(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n    if (isAlreadyInContacts) {\n      alert(`${name} is already in contacts`);\n      formReset();\n      return;\n    }\n\n    dispath(addContact({ name, number }));\n    formReset();\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={nameId}>Name</Label>\n      <Input\n        name=\"name\"\n        type=\"text\"\n        id={nameId}\n        value={name}\n        onChange={handleChange}\n        pattern=\"[A-Za-z0-9]+\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <Label htmlFor={numberId}>Number</Label>\n      <Input\n        name=\"number\"\n        type=\"tel\"\n        id={numberId}\n        value={number}\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 50px 30px;\n`;\n\nexport const Message = styled.p`\n  text-align: center;\n  margin-bottom: 0;\n  padding-bottom: 50px;\n`;\n","import styled from '@emotion/styled';\n\nexport const ContactLiItem = styled.li`\n  width: 650px;\n  margin: 10px;\n  padding: 5px 15px;\n  border: 1px solid black;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const ContactText = styled.p`\n  font-size: 30px;\n  padding-right: 40px;\n`;\n\nexport const DeleteBtn = styled.button`\n  background-color: #04aa6d;\n  border: none;\n  color: white;\n  padding: 16px 32px;\n  text-decoration: none;\n  margin: 4px 2px;\n  cursor: pointer;\n  font-size: 25px;\n  &:hover {\n    background-color: #c23f4d;\n  }\n`;\n","import { ContactLiItem, ContactText, DeleteBtn } from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport PropTypes from 'prop-types';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <ContactLiItem key={contact.id}>\n      <ContactText>\n        {contact.name}: {contact.number}\n      </ContactText>\n      <DeleteBtn name={contact.name} onClick={handleDelete}>\n        delete\n      </DeleteBtn>\n    </ContactLiItem>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string,\n    number: PropTypes.string,\n    name: PropTypes.string,\n  }),\n};\n","import { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div style={{ display: 'flex' }}>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n      <p>making a request to the server...</p>\n    </div>\n  );\n};\n","export const ErrorMessage = ({ children }) => {\n  return (\n    <div>\n      <h3>Oops something went wrong!</h3>\n      <p>Error message: {children}</p>\n    </div>\n  );\n};\n","import { ContactsList } from './Contacts.styled';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport {\n  getContacts,\n  getError,\n  getFilterValue,\n  getIsLoading,\n} from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\n\nexport const Contacts = () => {\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const Error = useSelector(getError);\n\n  const filterValue = useSelector(getFilterValue);\n\n  const normalizedFilter = filterValue.toLowerCase();\n\n  const filteredСontacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {Error && <ErrorMessage children={Error} />}\n      {!isLoading &&\n        !Error &&\n        (filteredСontacts.length !== 0 ? (\n          <ContactsList>\n            {filteredСontacts.map(contact => {\n              return <ContactItem contact={contact} key={contact.id} />;\n            })}\n          </ContactsList>\n        ) : filterValue.length !== 0 ? (\n          <p>There is no name with the name {filterValue}</p>\n        ) : (\n          <p>There are no contacts yet!</p>\n        ))}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  border-radius: 5px;\n  background-color: #f2f2f2;\n  padding: 20px;\n`;\n\nexport const Label = styled.label`\n  font-size: 30px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n  font-size: 30px;\n`;\n","import { nanoid } from 'nanoid';\nimport { Input, Label, Container } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilterValue } from 'redux/contacts/selectors';\nimport { setFilterValue } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterValue);\n\n  const filterId = nanoid();\n\n  const handleFilterChange = evt => {\n    const { value } = evt.currentTarget;\n    dispatch(setFilterValue(value));\n  };\n\n  return (\n    <Container>\n      <Label htmlFor={filterId}>\n        Find contacts by name\n        <Input\n          name=\"filter\"\n          type=\"text\"\n          value={filter}\n          onChange={handleFilterChange}\n          id={filterId}\n        />\n      </Label>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContainerForm = styled.div`\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  font-size: 40px;\n  color: #010101;\n`;\n\nexport const MainTitle = styled.h1`\n  margin-top: 0;\n  padding-top: 50px;\n  text-align: center;\n`;\n\nexport const ContactsTitle = styled.h2`\n  text-align: center;\n`;","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactsTitle, ContainerForm } from 'ui/ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  // const isLoading = useSelector(getIsLoading);\n  // const Error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContainerForm>\n      <ContactForm />\n      <ContactsTitle>Contacts</ContactsTitle>\n      <Filter />\n      <Contacts />\n    </ContainerForm>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","Label","Input","Button","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilterValue","filter","ContactForm","useSelector","dispath","useDispatch","useState","name","setName","number","setNumber","nameId","nanoid","numberId","handleChange","evt","currentTarget","value","formReset","onSubmit","preventDefault","normalizedName","toLowerCase","find","contact","alert","addContact","htmlFor","type","id","onChange","pattern","title","required","ContactsList","ContactLiItem","ContactText","DeleteBtn","ContactItem","dispatch","onClick","deleteContact","Loader","style","display","strokeColor","strokeWidth","animationDuration","width","visible","ErrorMessage","children","Contacts","Error","filterValue","normalizedFilter","filteredСontacts","includes","length","map","Container","Filter","filterId","setFilterValue","ContainerForm","ContactsTitle","useEffect","fetchContacts"],"sourceRoot":""}